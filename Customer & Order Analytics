-- How many orders placed in January? A: 9732
SELECT COUNT(OrderId) 
FROM BIT_DB.JanSales
WHERE length(orderid) = 6 
AND orderid <> 'Order ID';

-- How many of these orders were for Iphones? A: 379 
SELECT  COUNT(Quantity) 
FROM BIT_DB.JanSales
WHERE Product = 'iPhone' 
AND length(orderid) = 6 
AND orderid <> 'Order ID'; 

-- Select the customer account #'s for all the orders that were placed in Feb? 
SELECT distinct acctnum
FROM BIT_DB.customers a

INNER JOIN BIT_DB.FebSales b
ON a.order_id=b.orderid
WHERE length(orderid) = 6 
AND orderid <> 'Order ID'; 

-- Which product was the cheapest in Jan? What was the price? A: AAA Batteries. 2.99. 
SELECT MIN(price), Product 
FROM BIT_DB.JanSales 
WHERE Product IS NOT NULL
GROUP BY product, price 
ORDER BY price ASC
LIMIT 1;

-- What is the total revenue for each product solf in January? 
SELECT ROUND(SUM(Quantity) * Price) as Revenue, Product
FROM BIT_DB.JanSales 
GROUP BY Product;

--Which products were sold in February at 548 Lincoln St, Seattle, WA 98101, how many of each were sold, and what was the total revenue?
-- A: AAA Batteries (4 pack) q: 2 and money spent= 7.68 

SELECT SUM(quantity) as Quantity, product, SUM(Quantity) * price AS Revenue 
FROM BIT_DB.FebSales 
WHERE location = '548 Lincoln St, Seattle, WA 98101' 
GROUP BY product;

--How many customers ordered more than 2 products at a time in February, and what was the average amount spent for those customers?
-- A: 278 customers with more than 2 products. AvgSpent = 12.79

SELECT count(b.acctnum), avg(quantity)*price as AvgSpent  
FROM BIT_DB.FebSales a
LEFT JOIN BIT_DB.customers b 
ON a.orderID = b.order_ID 
WHERE quantity > 2 
AND length(orderid) = 6 
AND orderid <> 'Order ID';


-- Identify the orders made between 02/13/19 00:00' AND '02/18/19 00:00
SELECT orderdate
FROM BIT_DB.FebSales
WHERE orderdate between '02/13/19 00:00' AND '02/18/19 00:00';

-- Identify the location of the order made on 02/18/19 01:35
SELECT location
FROM BIT_DB.FebSales 
WHERE orderdate = '02/18/19 01:35'; 

--Total of products sold around 02/18/19 
SELECT sum(quantity)
FROM BIT_DB.FebSales 
WHERE orderdate like '02/18/19%';

--Identify specific product names for batteries 
SELECT distinct Product
FROM BIT_DB.FebSales
WHERE Product like '%Batteries%';

-- Identify all products and prices that end with .99 
SELECT distinct Product, Price
FROM BIT_DB.FebSales 
WHERE Price like '%.99';

--List All Products sold in LA in Feb
SELECT product, quantity, location
FROM BIT_DB.FebSales
WHERE location like '%Los Angeles%'; 

-- List All Products sold in LA in Feb including how many of each product was sold 
SELECT product, SUM(quantity) AS QuantitySoldLA
FROM BIT_DB.FebSales
WHERE location like '%Los Angeles%' 
GROUP BY product;

--Which locations in New York received at least 3 orders in January, and how many orders did they each receive?
SELECT distinct location, count(orderID)
FROM BIT_DB.JanSales
WHERE location LIKE '%NY%'
AND length(orderid) = 6 
AND orderid <> 'Order ID'
GROUP BY location
HAVING count(orderID)>2;

--How many of each type of headphone were sold in February?
SELECT product, SUM(quantity) 
FROM BIT_DB.FebSales 
WHERE product LIKE '%Headphones%' 
GROUP BY product;

--What was the average amount spent per account in February? 
SELECT AVG(b.price*b.quantity)AS AvgAmountSpent 
FROM BIT_DB.customers a 
INNER JOIN BIT_DB.FebSales b 
ON a.order_id = b.orderID 
AND length(orderid) = 6 
AND orderid <'Order ID> ';

--What was the average quantity of products purchased per account in February? 
select sum(a.quantity)/count(b.acctnum)
FROM BIT_DB.FebSales a
LEFT JOIN BIT_DB.customers b
ON a.orderid=b.order_id
WHERE length(orderid) = 6 
AND orderid <> 'Order ID';


--Which product brought in the most revenue in January and how much revenue did it bring in total?
SELECT SUM(b.quantity*b.price) as Revenue, b.product
FROM BIT_DB.JanSales b
GROUP BY b.Product 
ORDER BY  sum(quantity*price) desc 
LIMIT 1;
